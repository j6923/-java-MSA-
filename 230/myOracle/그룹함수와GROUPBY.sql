--그룹함수: SUM(), COUNT(), AVG(), MAX(), MIN()... 
SELECT SUM(SALARY) 급여총합
,COUNT(*) 사원수
,COUNT(DEPARTMENT_ID) "부서를 갖는 사원수"
,COUNT(COMMISSION_PCT) "수당을 받는 사원수"
,AVG(SALARY) "평균급여"
,MAX(SALARY) "최대급여"
,MIN(SALARY) "최소급여"
FROM EMPLOYEES;

--A테이블 
--a1 
--100 
-- 200
-- null
-- 400 
CREATE TABLE a(a1 number);
INSERT INTO a VALUES(100);
INSERT INTO a VALUES(200);
INSERT INTO a VALUES(NULL);
INSERT INTO a values(400);
SELECT * FROM a;
SELECT SUM(a1), COUNT(a1), AVG(a1) FROM a;

-------------------------------
--GROUP BY절에서 사용한 컬럼만 SELECT절에서 그룹함수와 함께 사용할 수 있다. 
-- 부서별 사원수를 출력하시오
SELECT DEPARTMENT_ID,COUNT(*) --EMPLYEE_ID, DEPARTMENT_ID, COUNT(*)-- 오류  
FROM EMPLOYEES                -- FFROM EMPLYEES
--WHERE                        -- GROUP BY DEPARTMENT_ID; 
GROUP BY DEPARTMENT_ID
ORDER BY 2 DESC; 
--HAVING 
--ORDER BY 
-- 2007년에 입사한 사원수와 평균급여를 출력하시오 
SELECT COUNT(*) "2007년 입사자수", AVG(SALARY) "2007년 사원 평균급여"
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'YYYY') = '2007';  --년도 4자리를 문자타입으로 가져왔다. 

--년도별 입사한 사원수와 평균급여를 출력하시오. 단 최근연도부터 출력하시오. 
SELECT TO_CHAR(HIRE_DATE,'YYYY')"년도별", COUNT(*)"사원수",ROUND(AVG(SALARY),2) "평균급여" 
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE,'YYYY')
ORDER BY 1 DESC;
-- 월별 입사한 사원수와 평균급여를 출력하시오. 단 1월부터 출력하시오 

SELECT TO_CHAR(HIRE_DATE,'MM'), COUNT(*), AVG(SALARY) 
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE, 'MM') -- 월별로 함 
ORDER BY 1 DESC; 

SELECT TO_CHAR(HIRE_DATE,'MM'), COUNT(*), AVG(SALARY) 
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE, 'MM') -- 월별로 함 
ORDER BY 1 ASC; 

SELECT TO_NUMBER(TO_CHAR(HIRE_DATE,'MM')), COUNT(*), AVG(SALARY) 
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE, 'MM') -- 월별로 함 
ORDER BY 1 ASC; 


SELECT TO_NUMBER(TO_CHAR(hire_date, 'FMMM')), COUNT(*), AVG(salary)
FROM employees
GROUP BY TO_CHAR(hire_date, 'FMMM')
ORDER BY 1 ASC;

-- 지역 
SELECT LOCATION_ID, CITY 
FROM LOCATIONS;

-- 부서 
SELECT DEPARTMENT_ID, LOCATION_ID
FROM DEPARTMENTS;

-- 지역별 지역번호(LOCATION_ID), 부서수를 출력하시오 
SELECT LOCATION_ID, COUNT(*)
FROM DEPARTMENTS 
GROUP BY LOCATION_ID;  

SELECT COUNT(*)  
FROM DEPARTMENTS; 
-- 총부서수는 27개

-- 지역별 지역번호, 도시명, 부서수를 출력하시오 --> 안됨, 해결하려면 JOIN 또는 SUBQUERY로 해결 
SELECT LOCATION_ID, CITY, COUNT(*)
FROM DEPARTMENTS 
GROUP BY LOCATION_ID;
-- CITY는 DEPARTMENTS에 없다. 
-- GROUP BY에서 CITY를 사용하지 않아 SELECT에서 CITY사용 불가 

--하반기(7월~12월) 월별 입사자수를 출력하시오 
SELECT TO_CHAR(HIRE_DATE,'MM') "월",COUNT(*) "입사자수"
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'MM')BETWEEN '07' AND '12' -- 문자값으로 하면 
GROUP BY TO_CHAR(HIRE_DATE, 'MM')
ORDER BY TO_CHAR(HIRE_DATE, 'MM');


SELECT TO_CHAR(HIRE_DATE,'MM') "입사한 월",COUNT(*) "입사한 사원수"
FROM EMPLOYEES
WHERE TO_NUMBER(TO_CHAR(HIRE_DATE,'MM'))>=7
GROUP BY TO_CHAR(HIRE_DATE, 'MM')
ORDER BY 1 ASC;

-- HAVING : 글부에 대한 조건절 
--하반기(7월~12월) 월별 입사자수를 출력하시오. 단, 입사자수가 7명 이상인 월만 출력한다 
SELECT TO_CHAR(HIRE_DATE,'MM'),COUNT(*)
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'MM')BETWEEN '07' AND '12' 
AND COUNT(*) >= 7-- WHERE절에는 그룹함수 사용 불가 그래서 에러가 남.
GROUP BY TO_CHAR(HIRE_DATE, 'MM')
ORDER BY 1;

SELECT TO_CHAR(HIRE_DATE,'MM'),COUNT(*)
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'MM')BETWEEN '07' AND '12' 
GROUP BY TO_CHAR(HIRE_DATE, 'MM')
HAVING COUNT(*)>=7
ORDER BY 1;
-- 그룹에 대한 조건은 HAVING에 적는다.


--급여가 5000이상인 사원들의 부서별 평균급여를 출력하시오 
SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES
WHERE SALARY >= 5000
GROUP BY DEPARTMENT_ID;


--급여가 5000이상인 사원들의 부서별 평균급여를 출력하시오. 단 평균급여가 10000이상인 부서만 출력하시오
SELECT DEPARTMENT_ID, AVG(SALARY)
FROM EMPLOYEES
WHERE SALARY >= 5000
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) >= 10000;

-- 부서별 사원수를 출력하시오 
SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- 부서별 사원수를 출력하시오. 총사원수도 출력하시오. 
SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY ROLLUP(DEPARTMENT_ID);

-- 부서별, 직무별 사원수를 출력하시오. 
SELECT DEPARTMENT_ID,JOB_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID, JOB_ID -- 대그룹 부서별, 소그룹 JOB_ID 
ORDER BY DEPARTMENT_ID, JOB_ID;


-- 부서별, 직무별 사원수를 출력하시오. 총사원수, 부서별 사원수도 출력한다. 
-- 부서배치받지 않은 사원은 제외한다. 
SELECT NVL(TO_CHAR(DEPARTMENT_ID),'총사원수'),NVL(JOB_ID, '부서별 사원수'), COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL 
GROUP BY ROLLUP (DEPARTMENT_ID, JOB_ID) 
ORDER BY DEPARTMENT_ID, JOB_ID;

-- 부서별, 직무별 사원수를 출력하시오. 총사원수, 부서별 사원수도 출력한다. 
-- 부서배치받지 않은 사원은 제외한다. 
SELECT NVL(TO_CHAR(DEPARTMENT_ID),'총사원수'),NVL(JOB_ID, '부서별 사원수'), COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL 
GROUP BY CUBE (DEPARTMENT_ID, JOB_ID) 
ORDER BY DEPARTMENT_ID, JOB_ID;


SELECT DEPARTMENT_ID, JOB_ID, COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL 
GROUP BY CUBE (DEPARTMENT_ID, JOB_ID) 
ORDER BY DEPARTMENT_ID, JOB_ID;
