/**
 * 고객 객체용 클래스이다. 
 * 고객정보(아이디, 이름, 비밀번호, 주소 )
 * @author KOSTA
 * 
 */
class Customer{
	String id;
	String pwd;
	String name;
	String address;
	
//	Customer(){}
	/**
	 * 고객정보를 초기화한다. 
	 * @param id 아이디
	 * @param pwd 비밀번호
	 * @param name 이름
	 * @param address 주소 
	 */
	Customer(String id, String pwd, String name, String address){
		this.id = id;
		this.pwd = pwd;
		this.name = name;
		this.address = address;
	}
	
	/**
	 * 고객 정보를 출력한다. 
	 * 출력 예로 아이디:1, 비밀번호:2, 이름:3, 주소:4 이다 
	 */
	void printInfo() {
		System.out.println("아이디:" + id + ", 비밀번호: " + pwd + ",이름:" + name + ",주소: " + address);
	}
	
	
	
}

/**
 * 고객 객체를 저장소에 추가, 조회, 수정, 삭제하는 클래스이다
 * @author KOSTA
 *
 */
class CustomerDAO{//배열이 되게 함. 
	int count; //저장된 고객수
	
	Customer[] customers;   //고객저장소   //고객객체가 저장될 공간 
	
	CustomerDAO(){
		customers = new Customer[5];
	}
	CustomerDAO(int size){
		customers = new Customer[size];
	}
	void printInfo() {
		System.out.println("고객저장소의 크기" + customers.length);
		System.out.println("저장된 고객수" + count);
		for(int i=0; i<count; i++) {
			Customer c = customers[i];
			System.out.print("[" + i + "]=");
			c.printInfo();
			
		}
//		Customer firstC = customers[0];
//		firstC.printInfo();
	}
	void add(Customer customer){//Customer 타입의 매개변수 
		customers[count] = customer;   //고정된 인덱스 값을 변경해줘야 함. 1씩 증가되야 함. 
		count++;
	}
	
	
	
}

public class CustomerManger {
	public static void main(String[] args) {
		CustomerDAO dao;
		dao = new CustomerDAO(); //최대5명이 저장될 저장소로 초기화 
		
		Customer c1 = new Customer("id1", "p1", "n1", "a1"); 
		dao.add(c1); //고객저장소의 0번 index에 c1객체 참조시킨다. 
		Customer c2 = new Customer("id2", "p2", "n2", "a2");
		dao.add(c2); //고객저장소의 1번 index에 c2객체 참조시킨다. 
		
		Customer c3 = new Customer("id3", "p3", "n3","a3");
		dao.add(c3);
		
		dao.printInfo();
		dao = new CustomerDAO(10); //최대 10명이 저장될 저장소로 초기화 
		

	}

}
